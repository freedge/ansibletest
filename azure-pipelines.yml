# Python package
# Create and test a Python package on multiple Python versions.
# Add steps that analyze code, save the dist with the build record, publish to a PyPI-compatible index, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/python

trigger:
- master

pool:
  vmImage: 'ubuntu-latest'
strategy:
  matrix:
    Python38:
      python.version: '3.8'

steps:
- task: UsePythonVersion@0
  inputs:
    versionSpec: '$(python.version)'
  displayName: 'Use Python $(python.version)'

- script: |
    python -m pip install --upgrade pip
    pip install -r requirements.txt
    ansible-galaxy collection install -r requirements.yml -p ./
    ansible-galaxy role install -r requirements.yml  -p ./
  displayName: 'Install dependencies'

- script: |
    ( fake-switches > /tmp/cisco.log ) &
    cd brosim ; ( python brosim.py > /tmp/storage.log) & cd ..
    sleep 1
    mkdir ~/.ssh ; touch ~/.ssh/known_hosts
    ssh-keyscan -T 2 -H 127.0.0.1 -p 2222 >> ~/.ssh/known_hosts
    
    export ANSIBLE_LOG_PATH=/tmp/ansible.log
    ansible-playbook svc_host.yml
    ansible-playbook network_leaf.yml
    ansible-playbook brocade_zoning.yml
    ansible-playbook svc_host.yml --check
    # ansible-playbook network_leaf.yml --check
    ansible-playbook brocade_zoning.yml --check
    cat /tmp/playbook.debug /tmp/ansible.log /tmp/cisco.log /tmp/storage.log
  displayName: 'test'